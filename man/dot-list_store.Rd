% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-store.R
\name{.list_store}
\alias{.list_store}
\title{List Storage Generator}
\usage{
.list_store()
}
\value{
a list with five functions the all operate on the internal
\code{.this_list} list object:
\itemize{
\item \code{get()} returns the value of \code{.this_list}
\item \code{update(value)} updates \code{.this_list} with a modified list \code{value}. Useful
for adding several pieces of information at once.
\item \code{set(key, value)} sets a given \code{key} (vector, with each element
representing a level of nesting) to a particular value (can be a vector
or list). If the \code{key} is \code{NULL}, \code{.this_list} is replaced with \code{value}
\item \code{clear()} sets \code{.this_list} to \code{NULL}
\item \code{copy()} creates an independent copy of the object for modification.
}
}
\description{
This is a function that will generate an object that can serve as persistant
storage for pre-computed values. Each object contains a list called
\code{.this_list} embedded within the enviroment it was created in.
}
\examples{
if (FALSE) {
  # note: asNamespace() gives access to internal functions. This is for
  # demonstration purposes only. There is no guarantee for these functions to
  # work.
  global_list <- asNamespace("sandpaper")$.list_store()
  global_list$set(key = NULL, list(a = 1, b = list(2)))
  global_list$set(key = "c", "three")
  global_list$get()
  global_list$update(list(c = "THREE", d = global_list$get()))
  global_list$get()
}
}
\keyword{internal}
