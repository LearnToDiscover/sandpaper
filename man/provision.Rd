% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-aggregate.R
\name{provision_agg_page}
\alias{provision_agg_page}
\alias{provision_extra_template}
\title{Provision an aggregate page in a lesson}
\usage{
provision_agg_page(pkg, title = "Key Points", slug = "key-points", new = FALSE)

provision_extra_template(pkg, quiet = TRUE)
}
\arguments{
\item{pkg}{an object created via \code{\link[pkgdown:as_pkgdown]{pkgdown::as_pkgdown()}} of a lesson.}

\item{title}{the new page title}

\item{slug}{the slug for the page (e.g. "aio" will become "aio.html")}

\item{new}{if \code{TRUE}, (default), the page will be generated
from a new template. If \code{FALSE}, the page is assumed to have been pre-built and
should be appended to.}
}
\value{
\itemize{
\item \code{provision_agg_page()}: a list:
\itemize{
\item \verb{$learner}: an \code{xml_document} templated for the learner page
\item \verb{$instructor}: an \code{xml_document} templated for the instructor page
\item \verb{$needs_episodes}: a logical indicating if the page should be completly
rebuilt (currently default to TRUE)
}
\item \code{provision_extra_template()}: invisibly, a copy of a global list of HTML
template content available in the internal global object
\code{sandpaper:::.html}:
\itemize{
\item \code{.html$template$extra$learner}: the rendered learner template as a string
\item \code{.html$template$extra$instructor}: the rendered instructor template as a string
}
}
}
\description{
A function that will provision page using a reusable template provisioned
for aggregate pages used in this lesson to avoid the unnecessary
re-rendering of already rendered content.
}
\details{
Pkgdown provides a lot of services in its rendering:
\itemize{
\item cross-linking
\item syntax highlighting
\item dynamic templating
\item etc.
}

The problem is that all of this effort takes time and it scales with the size
of the page being rendered such that in some cases it can take ~2 seconds for
the All in One page of a small lesson. Creating aggregate pages after all of
the markdown content has been rendered should not involve re-rendering
content.

Luckily, reading in content with \code{\link[xml2:read_xml]{xml2::read_html()}} is very quick and using
XPath queries, we can take the parts we need from the rendered content and
insert it into a template, which we store as a character in the \code{.html}
global object so it can be passed around to other functions without needing
an argument.

\code{provision_agg_page()} makes a copy of this cache, replaces the FIXME
values with the appropriate elements, and returns an object created from
\code{\link[xml2:read_xml]{xml2::read_html()}} for each of the instructor and learner veiws.
}
\examples{
if (FALSE) { # only run if you have provisioned a pkgdown site
  lsn_site <- "/path/to/lesson/site"
  pkg <- pkgdown::as_pkgdown(lsn_site)

  # create an AIO page
  provision_agg_page(pkg, title = "All In One", slug = "aio", quiet = FALSE)
}
}
\keyword{internal}
